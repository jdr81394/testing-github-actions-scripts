# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "develop-whitelabel", "master" ]
  # pull_request:
  #   branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env: 
      STAGING: "gs://locals-1/locales-staging/locales/"
      PRODUCTION: "gs://locals-1/locales-prod/locales/"

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # OR "2" -> To retrieve the preceding commit.

      - name: Get specific changed files
        id: changed-files-specific
        uses: tj-actions/changed-files@v27

      - name: Authenticate into GCP
        run: |
          echo "$GCP_SA_KEY" > ${HOME}/service-account-key.json
          gcloud auth activate-service-account --key-file=${HOME}/service-account-key.json --project=$GCP_PROJECT_ID
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}

      
      - name: Run Update
        run: |
          chmod +x ./scripts/updateBuckets.sh 

          first=()

          if [[ ${GITHUB_REF##*/} == master  ]]; then
            first=$( echo ${{ env.PRODUCTION }} )
          else
            first=$( echo ${{ env.STAGING }} )
          fi
          second=$( echo ${{ steps.changed-files-specific.outputs.all_changed_files }} )

          ./scripts/updateBuckets.sh $first $second

  