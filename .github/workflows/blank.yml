# This is a basic workflow to help you get started with Actions

name: Locales update in GCP Bucket

on:
  push:
    branches: [ "develop-whitelabel", "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env: 
      STAGING: ${{ secrets.STAGING_BUCKET_PATH }}
      PRODUCTION: ${{ secrets.PROD_BUCKET_PATH }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  

      - name: Get specific changed files
        id: changed-files-specific
        uses: tj-actions/changed-files@v27

      - name: Authenticate into GCP using Staging Service Account
        if: github.ref == 'refs/heads/develop-whitelabel'
        run: |
          echo "$GCP_SA_KEY" > ${HOME}/service-account-key.json
          gcloud auth activate-service-account --key-file=${HOME}/service-account-key.json --project=$GCP_PROJECT_ID
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}


      - name: Authenticate into GCP using Production Service Account
        if: github.ref == 'refs/heads/master'
        run: |
          echo "$PROD_GCP_SA_KEY" > ${HOME}/service-account-key.json
          gcloud auth activate-service-account --key-file=${HOME}/service-account-key.json --project=$PROD_GCP_PROJECT_ID
        env:
          PROD_GCP_PROJECT_ID: ${{ secrets.PROD_GCP_PROJECT_ID }}
          PROD_GCP_SA_KEY: ${{ secrets.PROD_GCP_SA_KEY }}

      
      - name: Run Update
        run: |
          chmod +x ./scripts/updateBuckets.sh 

          first=()

          if [[ ${GITHUB_REF##*/} == master  ]]; then
            first=$( echo ${{ env.PRODUCTION }} )
          else
            first=$( echo ${{ env.STAGING }} )
          fi
          second=$( echo ${{ steps.changed-files-specific.outputs.all_changed_files }} )

          ./scripts/updateBuckets.sh $first $second

  